// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// SADMVN
double SADMVN(arma::mat M, arma::mat C);
RcppExport SEXP _lxsplines_SADMVN(SEXP MSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(SADMVN(M, C));
    return rcpp_result_gen;
END_RCPP
}
// TriNProb
double TriNProb(NumericVector mean, NumericVector cv);
RcppExport SEXP _lxsplines_TriNProb(SEXP meanSEXP, SEXP cvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv(cvSEXP);
    rcpp_result_gen = Rcpp::wrap(TriNProb(mean, cv));
    return rcpp_result_gen;
END_RCPP
}
// BivNProb
double BivNProb(NumericVector mean, NumericVector cv);
RcppExport SEXP _lxsplines_BivNProb(SEXP meanSEXP, SEXP cvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cv(cvSEXP);
    rcpp_result_gen = Rcpp::wrap(BivNProb(mean, cv));
    return rcpp_result_gen;
END_RCPP
}
// rtmvn
NumericVector rtmvn(NumericVector tMean, NumericVector tVar);
RcppExport SEXP _lxsplines_rtmvn(SEXP tMeanSEXP, SEXP tVarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tMean(tMeanSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tVar(tVarSEXP);
    rcpp_result_gen = Rcpp::wrap(rtmvn(tMean, tVar));
    return rcpp_result_gen;
END_RCPP
}
// qcopy
SEXP qcopy(SEXP a, SEXP b, SEXP c, SEXP d);
RcppExport SEXP _lxsplines_qcopy(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type a(aSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type c(cSEXP);
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(qcopy(a, b, c, d));
    return rcpp_result_gen;
END_RCPP
}
// polyaGamma
NumericVector polyaGamma(arma::mat X, int truncate);
RcppExport SEXP _lxsplines_polyaGamma(SEXP XSEXP, SEXP truncateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type truncate(truncateSEXP);
    rcpp_result_gen = Rcpp::wrap(polyaGamma(X, truncate));
    return rcpp_result_gen;
END_RCPP
}
// sampleBetas
NumericVector sampleBetas(NumericVector ttY, NumericVector ttX, NumericVector tbetas, NumericVector LAM, NumericVector intLAM, NumericVector p, NumericVector tau, NumericVector omega);
RcppExport SEXP _lxsplines_sampleBetas(SEXP ttYSEXP, SEXP ttXSEXP, SEXP tbetasSEXP, SEXP LAMSEXP, SEXP intLAMSEXP, SEXP pSEXP, SEXP tauSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ttY(ttYSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ttX(ttXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tbetas(tbetasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LAM(LAMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intLAM(intLAMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleBetas(ttY, ttX, tbetas, LAM, intLAM, p, tau, omega));
    return rcpp_result_gen;
END_RCPP
}
// sinsertBeta_trivariate
List sinsertBeta_trivariate(NumericVector tY, NumericVector Xidx, NumericVector ctau, NumericVector tp, NumericVector lam, NumericVector omega);
RcppExport SEXP _lxsplines_sinsertBeta_trivariate(SEXP tYSEXP, SEXP XidxSEXP, SEXP ctauSEXP, SEXP tpSEXP, SEXP lamSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tY(tYSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xidx(XidxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctau(ctauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(sinsertBeta_trivariate(tY, Xidx, ctau, tp, lam, omega));
    return rcpp_result_gen;
END_RCPP
}
// sdeleteBeta_trivariate
List sdeleteBeta_trivariate(NumericVector tY, NumericVector Xidx, NumericVector ctau, NumericVector tp, NumericVector lam, NumericVector omega);
RcppExport SEXP _lxsplines_sdeleteBeta_trivariate(SEXP tYSEXP, SEXP XidxSEXP, SEXP ctauSEXP, SEXP tpSEXP, SEXP lamSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tY(tYSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xidx(XidxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctau(ctauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(sdeleteBeta_trivariate(tY, Xidx, ctau, tp, lam, omega));
    return rcpp_result_gen;
END_RCPP
}
// sinsertBeta_bivariate
List sinsertBeta_bivariate(NumericVector tY, NumericVector Xidx, NumericVector ctau, NumericVector tp, NumericVector lam, NumericVector omega);
RcppExport SEXP _lxsplines_sinsertBeta_bivariate(SEXP tYSEXP, SEXP XidxSEXP, SEXP ctauSEXP, SEXP tpSEXP, SEXP lamSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tY(tYSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xidx(XidxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctau(ctauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(sinsertBeta_bivariate(tY, Xidx, ctau, tp, lam, omega));
    return rcpp_result_gen;
END_RCPP
}
// sdeleteBeta_bivariate
List sdeleteBeta_bivariate(NumericVector tY, NumericVector Xidx, NumericVector ctau, NumericVector tp, NumericVector lam, NumericVector omega);
RcppExport SEXP _lxsplines_sdeleteBeta_bivariate(SEXP tYSEXP, SEXP XidxSEXP, SEXP ctauSEXP, SEXP tpSEXP, SEXP lamSEXP, SEXP omegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tY(tYSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xidx(XidxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctau(ctauSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    rcpp_result_gen = Rcpp::wrap(sdeleteBeta_bivariate(tY, Xidx, ctau, tp, lam, omega));
    return rcpp_result_gen;
END_RCPP
}
// shapesplineInsertQuadratic
NumericVector shapesplineInsertQuadratic(NumericVector k, NumericVector tp, NumericVector txi, NumericVector tdeg, NumericVector tCBX, NumericVector tpos);
RcppExport SEXP _lxsplines_shapesplineInsertQuadratic(SEXP kSEXP, SEXP tpSEXP, SEXP txiSEXP, SEXP tdegSEXP, SEXP tCBXSEXP, SEXP tposSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type txi(txiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tdeg(tdegSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tCBX(tCBXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tpos(tposSEXP);
    rcpp_result_gen = Rcpp::wrap(shapesplineInsertQuadratic(k, tp, txi, tdeg, tCBX, tpos));
    return rcpp_result_gen;
END_RCPP
}
// shapesplineDeleteQuadratic
NumericVector shapesplineDeleteQuadratic(NumericVector k, NumericVector tp, NumericVector txi, NumericVector tdeg, NumericVector tCBX, NumericVector tpos);
RcppExport SEXP _lxsplines_shapesplineDeleteQuadratic(SEXP kSEXP, SEXP tpSEXP, SEXP txiSEXP, SEXP tdegSEXP, SEXP tCBXSEXP, SEXP tposSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type txi(txiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tdeg(tdegSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tCBX(tCBXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tpos(tposSEXP);
    rcpp_result_gen = Rcpp::wrap(shapesplineDeleteQuadratic(k, tp, txi, tdeg, tCBX, tpos));
    return rcpp_result_gen;
END_RCPP
}
// shapesplineInsertLinear
NumericVector shapesplineInsertLinear(NumericVector k, NumericVector tp, NumericVector tdeg, NumericVector tCBX, NumericVector tpos);
RcppExport SEXP _lxsplines_shapesplineInsertLinear(SEXP kSEXP, SEXP tpSEXP, SEXP tdegSEXP, SEXP tCBXSEXP, SEXP tposSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tdeg(tdegSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tCBX(tCBXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tpos(tposSEXP);
    rcpp_result_gen = Rcpp::wrap(shapesplineInsertLinear(k, tp, tdeg, tCBX, tpos));
    return rcpp_result_gen;
END_RCPP
}
// shapesplineDeleteLinear
NumericVector shapesplineDeleteLinear(NumericVector k, NumericVector tp, NumericVector tdeg, NumericVector tCBX, NumericVector tpos);
RcppExport SEXP _lxsplines_shapesplineDeleteLinear(SEXP kSEXP, SEXP tpSEXP, SEXP tdegSEXP, SEXP tCBXSEXP, SEXP tposSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tp(tpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tdeg(tdegSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tCBX(tCBXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tpos(tposSEXP);
    rcpp_result_gen = Rcpp::wrap(shapesplineDeleteLinear(k, tp, tdeg, tCBX, tpos));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lxsplines_SADMVN", (DL_FUNC) &_lxsplines_SADMVN, 2},
    {"_lxsplines_TriNProb", (DL_FUNC) &_lxsplines_TriNProb, 2},
    {"_lxsplines_BivNProb", (DL_FUNC) &_lxsplines_BivNProb, 2},
    {"_lxsplines_rtmvn", (DL_FUNC) &_lxsplines_rtmvn, 2},
    {"_lxsplines_qcopy", (DL_FUNC) &_lxsplines_qcopy, 4},
    {"_lxsplines_polyaGamma", (DL_FUNC) &_lxsplines_polyaGamma, 2},
    {"_lxsplines_sampleBetas", (DL_FUNC) &_lxsplines_sampleBetas, 8},
    {"_lxsplines_sinsertBeta_trivariate", (DL_FUNC) &_lxsplines_sinsertBeta_trivariate, 6},
    {"_lxsplines_sdeleteBeta_trivariate", (DL_FUNC) &_lxsplines_sdeleteBeta_trivariate, 6},
    {"_lxsplines_sinsertBeta_bivariate", (DL_FUNC) &_lxsplines_sinsertBeta_bivariate, 6},
    {"_lxsplines_sdeleteBeta_bivariate", (DL_FUNC) &_lxsplines_sdeleteBeta_bivariate, 6},
    {"_lxsplines_shapesplineInsertQuadratic", (DL_FUNC) &_lxsplines_shapesplineInsertQuadratic, 6},
    {"_lxsplines_shapesplineDeleteQuadratic", (DL_FUNC) &_lxsplines_shapesplineDeleteQuadratic, 6},
    {"_lxsplines_shapesplineInsertLinear", (DL_FUNC) &_lxsplines_shapesplineInsertLinear, 5},
    {"_lxsplines_shapesplineDeleteLinear", (DL_FUNC) &_lxsplines_shapesplineDeleteLinear, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_lxsplines(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
